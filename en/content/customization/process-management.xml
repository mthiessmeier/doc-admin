<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="process-management" >
<title>Process Management</title>
    <section>
        <title>Introduction</title>
        <para>
            This feature of OTRS allows you to model processes (work-flows) in the ticket system.
            The basic idea is to be able to define recurring processes, and to delegate work items
            to different people, as well as leading the progress of a process in different
            directions based on certain criteria.
        </para>
    </section>
    <section>
        <title>Example process</title>
        <para>
            Let's see an example to make it more demonstrative. We will define a book order process:
        </para>

        <section>
            <title>Recording the demand</title>
            <para>
                Before an order will be placed, the demand for literature by an employee will be
                recorded. The following book is needed in our example:
            </para>
            <para>
                <screen>
Title: Prozessmanagement f√ºr Dummies
Autor: Thilo Knuppertz
ISBN: 3527703713
                </screen>
            </para>
        </section>

        <section>
            <title>Approval by superior</title>
            <para>
                The head of the employee's department needs to decide on the order. In the event of a
                denial, a reason should be recorded by the superior. In the event of an approval, the order
                is passed to the purchasing department.
            </para>
        </section>

        <section>
            <title>Processing by purchasing department</title>
            <para>
                Purchasing now has the task to find out where the book can be ordered with the best
                terms. If it is out of stock, this can be recorded in the order. In case of a
                successful order, purchasing will record the supplier, the price, and the delivery
                date.
            </para>
        </section>

        <section>
            <title>Processing by the mail room</title>
            <para>
                The shipment arrives at the company. The incoming goods department checks the
                shipment and records the date of receipt. Now the employee will be informed that
                the order has arrived and is ready to be collected.
            </para>
        </section>
    </section>
    <section>
        <title>Implementing the example</title>
        <para>
            If we assume that a ticket acts in this work-flow like an accompanying document that can
            receive change notes, we already have a clear picture of process tickets.
        </para>
        <para>
            From the analysis of the example process, we can identify the following necessary items:
        </para>
        <para>
            <itemizedlist>
                <listitem>
                    <para>
                        Possibilities to record data, let's call them
                        <emphasis>Activity Dialogs</emphasis>,
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Checks which can react to changed data automatically, let's call them
                        <emphasis>Transitions</emphasis>,
                    </para>
                </listitem>
                <listitem>
                    <para>
                        changes which can be applied to a process ticket after successful
                        transitions of a process ticket, let's call them
                        <emphasis>Transition Actions</emphasis>.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            We also need an additional item which might not be as obvious:
        </para>
        <para>
            <itemizedlist>
                <listitem>
                    <para>
                        A possibility to offer more than just one Activity Dialog to be available.
                        In our example this is needed when the superior must have the choice between
                        "Approve" and "Deny". Let's call this <emphasis>Activity</emphasis>.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Now, with Activities, Activity Dialogs, Transitions, and Transition Actions, we have the
            necessary tools to model the individual steps of our example. What's still missing is an
            area where for each work-flow the order of the steps can be specified. Let's call this
            <emphasis>Process</emphasis>. To be able to refer to all these entities later, we will
            assign to them an abbreviation in parentheses. This abbreviation is based on an internal
            identification mechanism called EntityIDs.
        </para>
        <para>
            The EntityIDs are conformed with one or two letters (depending on the process part or
            entity) and then a consecutive number, examples:
            <itemizedlist>
                <listitem><para>Process: 'P1', 'P2' ... 'Pn'.</para></listitem>
                <listitem><para>Activity: 'A1', 'A2' ... 'An'.</para></listitem>
                <listitem><para>Activity Dialog: 'AD1', 'AD2' ... 'ADn'.</para></listitem>
                <listitem><para>Transition: 'T1', 'T2' ... 'Tn'.</para></listitem>
                <listitem><para>Transition Action: 'TA1', 'TA2' ... 'TAn'.</para></listitem>
            </itemizedlist>
        </para>
        <para>
           Before the creation of the process and its parts is necessary to prepare the system, we
           will need to define some Queues, Users and Dynamic Fields as well as set some SysConfig
           options.
        </para>
        <para>
            Create the following Queues:
            <itemizedlist>
                <listitem><para>Superior</para></listitem>
                <listitem><para>Employee</para></listitem>
                <listitem><para>Purchasing</para></listitem>
                <listitem><para>Post office</para></listitem>
            </itemizedlist>
        </para>
        <para>
            Create the following Users:
            <itemizedlist>
                <listitem><para>Superior</para></listitem>
                <listitem><para>Employee</para></listitem>
            </itemizedlist>
        </para>
        <para>
            Create the following Dynamic Fields:
            <itemizedlist>
                <listitem>
                    <para>Title</para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <tbody>
                                <row>
                                    <entry>Label</entry><entry>Title</entry>
                                </row>
                                <row>
                                    <entry>Type</entry><entry>Text</entry>
                                </row>
                                <row>
                                    <entry>Object</entry><entry>Ticket</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                </listitem>
                <listitem>
                    <para>Author</para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <tbody>
                                <row>
                                    <entry>Label</entry><entry>Author</entry>
                                </row>
                                <row>
                                    <entry>Type</entry><entry>Text</entry>
                                </row>
                                <row>
                                    <entry>Object</entry><entry>Ticket</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                </listitem>
                <listitem>
                    <para>ISBN</para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <tbody>
                                <row>
                                    <entry>Label</entry><entry>ISBN</entry>
                                </row>
                                <row>
                                    <entry>Type</entry><entry>Text</entry>
                                </row>
                                <row>
                                    <entry>Object</entry><entry>Ticket</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                </listitem>
                <listitem>
                    <para>Status</para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <tbody>
                                <row>
                                    <entry>Label</entry><entry>Status</entry>
                                </row>
                                <row>
                                    <entry>Type</entry><entry>Dropdown</entry>
                                </row>
                                <row>
                                    <entry>Object</entry><entry>Ticket</entry>
                                </row>
                                <row>
                                    <entry>Possible Values</entry>
                                    <entry>
                                        <itemizedlist>
                                            <listitem><para>Approval</para></listitem>
                                            <listitem><para>Approval denied</para></listitem>
                                            <listitem><para>Approved</para></listitem>
                                            <listitem><para>Order denied</para></listitem>
                                            <listitem><para>Order placed</para></listitem>
                                            <listitem><para>Shipment received</para></listitem>
                                        </itemizedlist>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para>
                        Note: Please use this exactly this possible values for "Key" and "Value" in
                        the Dynamic Field setup.
                    </para>
                </listitem>
                <listitem>
                    <para>Supplier</para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <tbody>
                                <row>
                                    <entry>Label</entry><entry>Supplier</entry>
                                </row>
                                <row>
                                    <entry>Type</entry><entry>Text</entry>
                                </row>
                                <row>
                                    <entry>Object</entry><entry>Ticket</entry>
                                </row>
                            </tbody>
                        </tgroup>
                     </informaltable>
                </listitem>
                <listitem>
                    <para>Price</para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <tbody>
                                <row>
                                    <entry>Label</entry><entry>Price</entry>
                                </row>
                                <row>
                                    <entry>Type</entry><entry>Text</entry>
                                </row>
                                <row>
                                    <entry>Object</entry><entry>Ticket</entry>
                                </row>
                            </tbody>
                        </tgroup>
                     </informaltable>
                </listitem>
                <listitem>
                    <para>DeliveryDate</para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <tbody>
                                <row>
                                    <entry>Label</entry><entry>Delivery date</entry>
                                </row>
                                <row>
                                    <entry>Type</entry><entry>Date</entry>
                                </row>
                                <row>
                                    <entry>Object</entry><entry>Ticket</entry>
                                </row>
                            </tbody>
                        </tgroup>
                     </informaltable>
                </listitem>
                <listitem>
                    <para>DateOfReceipt</para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <tbody>
                                <row>
                                    <entry>Label</entry><entry>Date Of Receipt</entry>
                                </row>
                                <row>
                                    <entry>Type</entry><entry>Date</entry>
                                </row>
                                <row>
                                    <entry>Object</entry><entry>Ticket</entry>
                                </row>
                            </tbody>
                        </tgroup>
                     </informaltable>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Set the the following SysConfig settings:
            <itemizedlist>
                <listitem><para>'Ticket::Responsible': Yes</para></listitem>
                <listitem>
                    <para>
                        'Ticket::Frontend::AgentTicketZoom###ProcessWidgetDynamicFieldGroups':
                    </para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <thead>
                                <row>
                                    <entry><emphasis>Key:</emphasis></entry>
                                    <entry><emphasis>Content:</emphasis></entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Book</entry><entry>Title, Author, ISBN</entry>
                                </row>
                                <row>
                                    <entry>General</entry><entry>Status</entry>
                                </row>
                                <row>
                                    <entry>Order</entry>
                                    <entry>Price, Supplier, DeliveryDate</entry>
                                </row>
                                <row>
                                    <entry>Shipment</entry><entry>DateOfReceipt</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                </listitem>
                <listitem>
                    <para>
                        'Ticket::Frontend::AgentTicketZoom###ProcessWidgetDynamicField':
                    </para>
                    <informaltable>
                        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
                            <thead>
                                <row>
                                    <entry><emphasis>Key:</emphasis></entry>
                                    <entry><emphasis>Content:</emphasis></entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Author</entry><entry>1</entry>
                                </row>
                                <row>
                                    <entry>DateOfReceipt</entry><entry>1</entry>
                                </row>
                                <row>
                                    <entry>DeliveryDate</entry><entry>1</entry>
                                </row>
                                <row>
                                    <entry>ISBN</entry><entry>1</entry>
                                </row>
                                <row>
                                    <entry>Price</entry><entry>1</entry>
                                </row>
                                <row>
                                    <entry>Status</entry><entry>1</entry>
                                </row>
                                <row>
                                    <entry>Supplier</entry><entry>1</entry>
                                </row>
                                <row>
                                    <entry>Title</entry><entry>1</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                </listitem>
            </itemizedlist>
        </para>
        <para>
             Now lets start with the real Process Management stuff. In the next step, we will define
             the individual entities that we need.
        </para>
        <section>
            <title>Process (as a container)</title>
            <para>
                To create a new process is necessary to click on the "Process Management" link in
                the System Administration box in the Admin panel, this will lead to the Process
                Management Overview screen. After the creation of the process we can create all
                other entities (or process parts).
            </para>
            <note>
                <para>
                    Activities, Activity Dialogs, Transitions and Transition Actions defined in one
                    process will be available for all the processes in the system.
                </para>
            </note>
            <para>
                <screenshot>
                    <screeninfo>The OTRS Admin screen - System Administration</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-admin-sysadmin.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: OTRS Admin screen - System Administration.</emphasis>
            </para>

            <para>
                Click on the "Create New Process" action from the Actions box.
            </para>
            <para>
                <screenshot>
                    <screeninfo>Create New Process button</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-newprocess-button.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: Create New Process button.</emphasis>
            </para>
            <para>
                Fill the process information,set Process Name and the Description, we will leave the
                process State as "inactive", until we finish all the tasks. Save the process.
            </para>
            <para>
                <screenshot>
                    <screeninfo>Add new process</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-newprocess-info.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: Add new process.</emphasis>
            </para>
        </section>
        <section>
            <title>Activity Dialogs</title>
                <para>
                    Click on the new process name in the Process Management Overview Screen, then
                    in the "Available Process Elements" click in "Activity Dialogs" (this action
                    will expand the activity dialog options and will collapse all others doing
                    and accordion like effect), then click on "Create New Activity Dialog".
                </para>
                <para>
                    <screenshot>
                        <screeninfo>Create New Activity Dialog button</screeninfo>
                        <graphic srccredit="process-management - scale='40'screenshot" scale='40' fileref="screenshots/pm-accordion-new-activitydialog.png"></graphic>
                    </screenshot>
                </para>
                <para>
                    <emphasis>Figure: Create New Activity Dialog button.</emphasis>
                </para>
                <para>
                    In the opened popup screen fill the "Activity dialog Name" as well as the
                    "Description (short)" fields, for this example we will leave all other fields
                    as the default, to assign fields to the Activity Dialog simple drag the required
                    field from the "Available Fields" pool and drop into the "Assigned Fields" pool.
                    The order in the "Assigned Fields" pool is the order as the fields will have in
                    the screen, to modify the order simply drag and drop the filed within the pool
                    to rearrange it in the correct place.
                </para>
                <para>
                    <screenshot>
                        <screeninfo>Add new Activity Dialog</screeninfo>
                        <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-edit-activitydialog.png"></graphic>
                    </screenshot>
                </para>
                <para>
                    <emphasis>Figure: Add new Activity Dialog.</emphasis>
                </para>
                <para>
                    As soon as the fields are dropped into the "Assigned Fields" pool another popup
                    screen is shown with some details about the field, we will leave the default
                    options and only for Article fields we should make sure that the ArticleType
                    field is set to "note-internal".
                </para>
                <para>
                    <screenshot>
                        <screeninfo>Edit field details (Article)</screeninfo>
                        <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-edit-field-article.png"></graphic>
                    </screenshot>
                </para>
                <para>
                    <emphasis>Figure: Edit field details (Article).</emphasis>
                </para>
                <para>
                    After all fields are assigned, click on the submit button in the main popup
                    screen to save the changes.
                </para>
                <para>
                    In this example, we will use Article field for comments, but another option could
                    be to create a TextArea type Dynamic Field, the rest of the mentioned fields
                    in the lines below are the Dynamic Fields that we define before.
                </para>
                <para>
                    Please be aware that in this screen all the Dynamic Fields has the prefix
                    "DynamicField_" as in "DynamicField_Title", Do not confuse with the field
                    "Title" that is the Ticket Title.
                </para>
                <para>
                    Create the following Activity Dialogs:
                </para>
                <para>
                <itemizedlist>
                    <listitem>
                        <para>"Recoding the demand" (AD1)</para>
                        <para>
                            An Activity Dialog that contains all the required fields for the data
                            to be collected for the order (Title, Author and ISBN), and a Status
                            field with the option to choose "Approval".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Approval denied" (AD2)</para>
                        <para>
                            An Activity Dialog with a comment field (Article) and a Status field
                            with the option "Approval denied".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Approved" (AD3)</para>
                        <para>
                            Here we just need the Status field with the option "Approved".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Order denied" (AD4)</para>
                        <para>
                            An activity dialog which makes it possible for purchasing to reject an
                            impossible order (book out of stock). Here we also need a comment field
                            and the Status field with the option "Order denied".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Order placed" (AD5)</para>
                        <para>
                            An activity dialog with the fields Supplier, Price and Delivery date
                            for purchasing and the Status field with the option "Order placed".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Shipment received" (AD6)</para>
                        <para>
                            An activity for the mail room with a field for the Date of receipt
                            and the Status field with the option "Shipment received".
                        </para>
                    </listitem>
                </itemizedlist>
                </para>
                <para>
                    To restrict the Status field for each activity dialog we need to add some ACLs
                    in the Kernel/Config.pm or to a new perl file located in Kernel/Config/Files.
                </para>
                <para>
                    <screen>
    $Self->{TicketAcl}->{'P1-AD1-1'} = {
        Properties => {
            Process => {
                ActivityDialogEntityID => ['AD1'],
            },
        },
        Possible => {
            Ticket => {
                DynamicField_Status => ['Approval'],
            },
        },
    };

    $Self->{TicketAcl}->{'P1-AD2-1'} = {
        Properties => {
            Process => {
                ActivityDialogEntityID => ['AD2'],
            },
        },
        Possible => {
            Ticket => {
                DynamicField_Status => ['Approval denied'],
            },
        },
    };

    $Self->{TicketAcl}->{'P1-AD3-1'} = {
        Properties => {
            Process => {
                ActivityDialogEntityID => ['AD3'],
            },
        },
        Possible => {
            Ticket => {
                DynamicField_Status => ['Approved'],
            },
        },
    };

    $Self->{TicketAcl}->{'P1-AD4-1'} = {
        Properties => {
            Process => {
                ActivityDialogEntityID => ['AD4'],
            },
        },
        Possible => {
            Ticket => {
                DynamicField_Status => ['Order denied'],
            },
        },
    };

    $Self->{TicketAcl}->{'P1-AD5-1'} = {
        Properties => {
            Process => {
                ActivityDialogEntityID => ['AD5'],
            },
        },
        Possible => {
            Ticket => {
                DynamicField_Status => ['Order placed'],
            },
        },
    };

    $Self->{TicketAcl}->{'P1-AD6-1'} = {
        Properties => {
            Process => {
                ActivityDialogEntityID => ['AD6'],
            },
        },
        Possible => {
            Ticket => {
                DynamicField_Status => ['Shipment received'],
            },
        },
    };
                    </screen>
                </para>
        </section>
        <section>
            <title>Transitions</title>
                <para>
                    In the "Available Process Elements" click in "Transitions", then click on
                    "Create New Transition".
                </para>
                <para>
                    <screenshot>
                        <screeninfo>Create New Transition button</screeninfo>
                        <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-accordion-new-transition.png"></graphic>
                    </screenshot>
                </para>
                <para>
                    <emphasis>Figure: Create New Transition button.</emphasis>
                </para>
                <para>
                    In the opened popup screen fill the "Transition Name", then in the conditions,
                    for this example we will use just one condition and just one field. For both
                    we can leave the Type of Linking as "and" and we will use the filed match type
                    value as "String".
                </para>
                <para>
                    <screenshot>
                        <screeninfo>Add new Transition</screeninfo>
                        <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-edit-transition.png"></graphic>
                    </screenshot>
                </para>
                <para>
                    <emphasis>Figure: Add new Transition.</emphasis>
                </para>
                <para>
                    After all conditions are set, click on the submit button to save the changes.
                </para>
                <para>
                    Create the following Transitions:
                </para>
                <para>
                <itemizedlist>
                    <listitem>
                        <para>"Approval" (T1)</para>
                        <para>
                            A transition which checks if the Status field is set to "Approval".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Approval denied" (T2)</para>
                        <para>
                            A transition which checks if the Status field is set to "Approval
                            denied".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Approved" (T3)</para>
                        <para>
                            A transition which checks if the Status field is set to "Approved".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Order denied" (T4)</para>
                        <para>
                            A transition which checks if the Status field is set to "Order denied".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Order placed" (T5)</para>
                        <para>
                            A transition which checks if the Status field is set to "Order placed".
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Shipment received" (T6)</para>
                        <para>
                            A transition which checks if the Status field is set to "Shipment
                            received".
                        </para>
                    </listitem>
                </itemizedlist>
                </para>
        </section>
        <section>
            <title>Transition Actions</title>
                <para>
                    Click on "Transition Actions" in the "Available Process Elements", then click
                    on "Create New Transition Action".
                </para>
                <para>
                    <screenshot>
                        <screeninfo>Create New Transition Action button</screeninfo>
                        <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-accordion-new-transitionaction.png"></graphic>
                    </screenshot>
                </para>
                <para>
                    <emphasis>Figure: Create New Transition Action button.</emphasis>
                </para>
                <para>
                    In the opened popup screen fill the "Transition Name", and the "Transition
                    Action module" then add the required and optional parameter names and values.
                </para>
                <para>
                    All the Transition Action Modules are located in
                    Kernel/System/ProcessManagement/TransitionAction and the following is the list
                    of bundled Transition Actions included in this release
                </para>
                <para>
                    <itemizedlist>
                        <listitem><para>DynamicFieldSet</para></listitem>
                        <listitem><para>TicketArticleCreate</para></listitem>
                        <listitem><para>TicketCustomerSet</para></listitem>
                        <listitem><para>TicketLockSet</para></listitem>
                        <listitem><para>TicketOwnerSet</para></listitem>
                        <listitem><para>TicketQueueSet</para></listitem>
                        <listitem><para>TicketResponsibleSet</para></listitem>
                        <listitem><para>TicketServiceSet</para></listitem>
                        <listitem><para>TicketSLASet</para></listitem>
                        <listitem><para>TicketStateSet</para></listitem>
                        <listitem><para>TicketTitleSet</para></listitem>
                        <listitem><para>TicketTypeSet</para></listitem>
                    </itemizedlist>
                </para>
                <para>
                    Each module has its own and different parameters.
                    Please review the <link linkend="available-transition-actions">module documentation</link> to learn all require and optional parameters.
                </para>
                <para>
                    <screenshot>
                        <screeninfo>Add new Transition Action</screeninfo>
                        <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-edit-transitionaction.png"></graphic>
                    </screenshot>
                </para>
                <para>
                    <emphasis>Figure: Add new Transition Action.</emphasis>
                </para>
                <para>
                    After all parameters and values are set click on the submit button to save the
                    changes.
                </para>
                <para>
                    Create the following Transitions Actions:
                </para>
                <para>
                <itemizedlist>
                    <listitem>
                        <para>"Move the process ticket into the 'Superior' queue" (TA1)</para>
                        <para>
                            This action is supposed to be executed when the Transition "Approval"
                            (T1) applied.
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Change ticket responsible to 'Superior'" (TA2)</para>
                        <para>
                            To be executed when the Transition "Approval" (T1) applied.
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Move the process ticket into the 'Employee' queue"" (TA3)</para>
                        <para>To be executed when:</para>
                        <itemizedlist>
                            <listitem><para>
                                The Transition "Approval denied" (T2) applied
                            </para></listitem>
                            <listitem><para>
                                The Transition "Order denied" (T4) applied
                            </para></listitem>
                            <listitem><para>
                                The Transition "Shipment received" (T6) applied
                            </para></listitem>
                        </itemizedlist>
                    </listitem>
                    <listitem>
                        <para>"Change ticket responsible to 'Employee'" (TA4)</para>
                        <para>To be executed when:</para>
                        <itemizedlist>
                            <listitem><para>
                                The transition "Approval denied" (T2) applied
                            </para></listitem>
                            <listitem><para>
                                The transition "Order denied" (T4) applied
                            </para></listitem>
                            <listitem><para>
                                The transition "Shipment received" (T6) applied
                            </para></listitem>
                        </itemizedlist>
                    </listitem>
                    <listitem>
                        <para>"Move process ticket into the 'Purchasing' queue" (TA5)</para>
                        <para>To be executed when the transition "Approved" (T3) applied.</para>
                    </listitem>
                    <listitem>
                        <para>"Move process ticket into the 'Post office' queue" (TA6)</para>
                        <para>To be executed when the transition "Order placed" (T5) applied.</para>
                    </listitem>
                    <listitem>
                        <para>"Close ticket successfully" (TA7)</para>
                        <para>To be executed when:</para>
                        <itemizedlist>
                            <listitem><para>
                                The transition "Shipment received" (T6) applied
                            </para></listitem>
                        </itemizedlist>
                    </listitem>
                    <listitem>
                        <para>"Close ticket unsuccessfully" (TA8)</para>
                        <para>To be executed when:</para>
                        <itemizedlist>
                            <listitem><para>
                                The transition "Approval denied" (T2) applied
                            </para></listitem>
                            <listitem><para>
                                The transition "Order denied" (T4) applied
                            </para></listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                </para>
                <para>
                    As you can see, there are places where the same Transition Actions should be
                    executed. Therefore it is reasonable to make it possible to link
                    Transition Actions freely with Transitions to be able to reuse them.
                </para>
        </section>
        <section>
            <title>Activities</title>
            <para>
                We chose the approach to see Activities as a basket which can contain one
                or more Activity Dialogs.
            </para>
            <para>
                Click on "Activities" in the "Available Process Elements", then click
                on "Create New Activity".
            </para>
            <para>
                <screenshot>
                    <screeninfo>Create New Activity button</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-accordion-new-activity.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: Create New Activity button.</emphasis>
            </para>
            <para>
                In the opened popup screen fill the "Activity Name", Then drap the required
                Activity Dialogs from the "Available Activity Dialogs" pool, and drop then
                into to the "Assigned Activity Dialogs" pool. This dialogs will be presented (in
                the ticket zoom screen) in the same order as it is defined on this screen
                translating from top to bottom, to left to right.
            </para>
            <para>
                This order is specially important in the first Activity, since the first Activity
                Dialog for this activity is the only one that is presented when the process starts
            </para>
            <para>
                Create the following Activities:
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>"Recording the demand" (A1)</para>
                        <para>Contains the Activity Dialog "Recording the demand" (AD1)</para>
                    </listitem>
                    <listitem>
                        <para>"Approval" (A2)</para>
                        <para>
                            Contains the Activity Dialogs "Approval denied" (AD2) as well as
                            "Approved" (AD3)
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Order" (A3)</para>
                        <para>
                            Contains the Activity Dialogs "Order rejected" (AD4) as well as
                            "Order placed" (AD5)
                        </para>
                    </listitem>
                    <listitem>
                        <para>"Incoming" (A4)</para>
                        <para>Contains the Activity Dialog "Shipment received" (AD6)</para>
                    </listitem>
                    <listitem>
                        <para>"Process complete" (A5):
                            This is an Activity without possible Activity Dialogs.
                            It will be set after "Approval denied", "Order denied" or
                            "Shipment received" and represents the end of the process.
                        </para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                Now we can clearly see that Activities are precisely defined states of a process
                ticket. After a successful Transition a process ticket moves from one Activity to
                another.
            </para>
        </section>
        <section>
            <title>Book ordering process Path</title>
            <para>
                Let us conclude our example with the last missing piece in the puzzle, the Process
                as the a flow describer. In our case this is the whole ordering work-flow. Other
                processes could be office supply ordering or completely different processes.
            </para>
            <para>
                The process has a starting point which consists of the start Activity and the start
                Activity Dialog. For any new book order, the start Activity Dialog (first Activity
                Dialog for the first Activity) is the first screen that is displayed. If this is
                completed and saved, the Process ticket will be created and can follow the
                configured work-flow.
            </para>
            <para>
                The process also contains the directions for how the process ticket can move
                through the Process. Let's call this the "Path". It consists of the start Activity,
                one or more Transitions (possibly with Transition Actions), and other Activities.
            </para>
            <para>
                Assuming that the Activities has already assigned their Activity Dialogs drag an
                Activity from the accordion (in the left part of the screen) and drop it into the
                canvas area (below process information). Notice that an arrow from the process start
                (green circle) to the  Activity is placed automatically. (This is the first Activity
                and its first Activity Dialog is the first screen that will be shown when the
                process starts).
            </para>
            <para>
                <screenshot>
                    <screeninfo>Drag first Activity into the canvas</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-canvas-drag-activity.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: Drag first Activity into the canvas.</emphasis>
            </para>
            <para>
                Next, drag another Activity into the canvas too. now we will have two Activities in
                the canvas the first one is connected to the start point and the second has no
                connections, you can hover the mouse over each activity to reveal their own Activity
                Dialogs.
            </para>
            <para>
                <screenshot>
                    <screeninfo>Drag second Activity into the canvas</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-canvas-drag-activity2.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: Drag second Activity into the canvas.</emphasis>
            </para>
            <para>
                Then let's create the "Path" (connection) between this two Activities, for this we
                will use the Transitions, Click on Transitions in the accordion drag a  Transition
                and drop it inside the first Activity, notice that the Activity change its color
                indicating that the Transition is attached, as soon as the Transition is dropped
                the end point of the Transition arrow will be placed next to the process start
                point. Drag the Transition arrow end point and drop it inside the other Activity to
                create the connection between the Activities.
            </para>
            <para>
                <screenshot>
                    <screeninfo>Drag a Transition into the canvas</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-canvas-drag-transition.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: Drag a Transition into the canvas.</emphasis>
            </para>
            <para>
                Now that the "Path" between the Actions is defined, then we need to assign the
                Transition Actions to the Transition, double click the Transition label (in the
                canvas), this will open a new popup window.
            </para>
            <para>
                <screenshot>
                    <screeninfo>Connect Activities using Transitions</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-canvas-drag-transition2.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: Connect Activities using Transitions.</emphasis>
            </para>
            <para>
                Drag the needed Transition Actions from Available Transition Actions pool
                and drop them into the Assigned Transition Actions pool and click on submit button.
            </para>
            <para>
                <screenshot>
                    <screeninfo>Assign Transition Actions</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-edit-path.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: Assign Transition Actions.</emphasis>
            </para>
            <para>
                Then back in the main process edit screen click on save button below the canvas to
                save all other changes.
            </para>
            <para>
                Complete the "path"" adding the following Activities, Transitions and Transition
                Actions:
            </para>
            <para>Recording the demand until "Approval"</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Starting point: Activity: Recording the demand (A1)</para>
                    </listitem>
                    <listitem>
                        <para>Possible Transition: Approval (T1)</para>
                        <itemizedlist>
                            <listitem>
                                <para>
                                    If the condition of this activity is fulfilled, the ticket will
                                    move to Activity: Approval (A2)
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Additionally, the following TransitionActions are executed:
                                </para>
                                <itemizedlist>
                                    <listitem>
                                        <para>
                                            "Moving the ticket into the 'Superior' Queue" (TA1)
                                        </para>
                                    </listitem>
                                    <listitem>
                                        <para>"Set ticket responsible to 'Superior'" (TA2)</para>
                                    </listitem>
                                </itemizedlist>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                The  Activity: "Recording the demand" (A1) is a defined step of the process ticket,
                where there is the possibility for the Transition: "Approval" (T1). If this applies,
                the ticket will move to the next Activity: "Approval" (A2), and the Transition
                Actions: "Moving the ticket into the 'Superior' Queue" (TA1) and "Set ticket
                responsible to 'Superior'" (TA2) are executed. In the Activity: "Approval" (A2),
                the Activity Dialogs: "Approval denied" (AD2) and "Approved" (AD3) are available.
            </para>
            <para>Approval</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Starting Point: Activity "Approval" (A2)</para>
                    </listitem>
                    <listitem>
                        <para>Possible Transitions:</para>
                            <itemizedlist>
                                <listitem>
                                    <para>"Approval denied" (T2)</para>
                                    <itemizedlist>
                                        <listitem>
                                        <para>
                                            If this matches, the process ticket will move to
                                            Activity:"Process complete" (A5).
                                        </para>
                                        </listitem>
                                        <listitem>
                                        <para>
                                            Additionally, the following Transition Actions are
                                            executed:
                                        </para>
                                        <itemizedlist>
                                        <listitem>
                                            <para>
                                                "Move process ticket to the 'Employee' Queue" (TA3)
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                "Set ticket responsible to 'Employee'" (TA4)
                                             </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                "Close ticket unsuccessfully" (TA8)
                                             </para>
                                        </listitem>
                                        </itemizedlist>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                                <listitem>
                                    <para>"Approved" (T3)</para>
                                    <itemizedlist>
                                        <listitem>
                                        <para>
                                            If this matches, the process ticket will move to
                                            Activity: "Order" (A3).
                                        </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Additionally, the following Transition Action is
                                                executed:
                                            </para>
                                            <itemizedlist>
                                            <listitem>
                                                <para>
                                                    "Move process ticket to 'Purchasing' Queue"
                                                    (TA5)
                                                </para>
                                            </listitem>
                                            </itemizedlist>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                We can see that from the current Activity, which defines a step of the process
                ticket, there are one or more possibilities for Transition which have exactly one
                target Activity (and possibly one or more Transition Actions).
            </para>
            <para>Order</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Starting Point: Activity "Order" (A3)</para>
                    </listitem>
                    <listitem>
                        <para>Possible Transitions:</para>
                            <itemizedlist>
                                <listitem>
                                    <para>"Order denied" (T4)</para>
                                    <itemizedlist>
                                        <listitem>
                                        <para>
                                            If this matches, the process ticket will move to
                                            Activity:"Process complete" (A5).
                                        </para>
                                        </listitem>
                                        <listitem>
                                        <para>
                                            Additionally, the following Transition Actions are
                                            executed:
                                        </para>
                                        <itemizedlist>
                                        <listitem>
                                            <para>
                                                "Move process ticket to the 'Employee' Queue" (TA3)
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                "Set ticket responsible to 'Employee'" (TA4)
                                             </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                "Close ticket unsuccessfully" (TA8)
                                             </para>
                                        </listitem>
                                        </itemizedlist>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                                <listitem>
                                    <para>"Order placed" (T5)</para>
                                    <itemizedlist>
                                        <listitem>
                                        <para>
                                            If this matches, the process ticket will move to
                                            Activity: "Incoming" (A5).
                                        </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Additionally, the following Transition Action is
                                                executed:
                                            </para>
                                            <itemizedlist>
                                            <listitem>
                                                <para>
                                                    "Move process ticket to 'Post office' Queue"
                                                    (TA6)
                                                </para>
                                            </listitem>
                                            </itemizedlist>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                    </listitem>
                </itemizedlist>
            </para>
            <para>Incoming</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Starting Point: Activity "Incoming" (A4)</para>
                    </listitem>
                    <listitem>
                        <para>Possible Transitions:</para>
                            <itemizedlist>
                                <listitem>
                                    <para>"Shipment received" (T6)</para>
                                    <itemizedlist>
                                        <listitem>
                                        <para>
                                            If this matches, the process ticket will move to
                                            Activity:"Process complete" (A5).
                                        </para>
                                        </listitem>
                                        <listitem>
                                        <para>
                                            Additionally, the following Transition Actions are
                                            executed:
                                        </para>
                                        <itemizedlist>
                                        <listitem>
                                            <para>
                                                "Move process ticket to the 'Employee' Queue" (TA3)
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                "Set ticket responsible to 'Employee'" (TA4)
                                             </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                "Close ticket successfully" (TA7)
                                             </para>
                                        </listitem>
                                        </itemizedlist>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                The complete Path for the book ordering Process will then look like this:
            </para>
            <para>
                <screenshot>
                    <screeninfo>Book ordering complete process path</screeninfo>
                    <graphic srccredit="process-management - screenshot" scale='40' fileref="screenshots/pm-edit-process.png"></graphic>
                </screenshot>
            </para>
            <para>
                <emphasis>Figure: Book ordering complete process path.</emphasis>
            </para>
            <para>
                After you finish the process path please click on "Save" button in the lower part of
                the canvas and then click on "Synchronize All Processes" button. This will gather
                all processes information form the Database and create a cache file (in Perl
                language). This cache file is acctually the processes configuration that the system
                will use to create or use process tickets.
            </para>
            <para>
                Any change that is made of the process (in the GUI) will require to re-synchronize
                the cache file in order to get the change reflected in the system.
            </para>
            <para>
                It is also possible to import the whole process from a YAML file, but it is still
                necessary to create all Dynamic Fields, Users, Queues, etc that are needed by each
                process before the import.
            </para>
            <para>
                Notice that if the process requires the use of ACLs those are also needed to be set
                manually.
            </para>
            <para>
                The follwing is the complete YAML file for the book ordering process example:
            </para>
            <para>
                <screen><![CDATA[
---
Activities:
  A1:
    ActivityDialogs:
      - AD1
    ChangeTime: 2012-11-23 14:49:22
    Config:
      ActivityDialog:
        1: AD1
    CreateTime: 2012-11-23 11:49:38
    EntityID: A1
    ID: 151
    Name: Recording the demand
  A2:
    ActivityDialogs:
      - AD2
      - AD3
    ChangeTime: 2012-12-13 00:55:12
    Config:
      ActivityDialog:
        1: AD2
        2: AD3
    CreateTime: 2012-11-23 11:50:11
    EntityID: A2
    ID: 152
    Name: Approval
  A3:
    ActivityDialogs:
      - AD4
      - AD5
    ChangeTime: 2012-11-23 18:12:14
    Config:
      ActivityDialog:
        1: AD4
        2: AD5
    CreateTime: 2012-11-23 11:50:35
    EntityID: A3
    ID: 153
    Name: Order
  A4:
    ActivityDialogs:
      - AD6
    ChangeTime: 2012-11-23 18:12:35
    Config:
      ActivityDialog:
        1: AD6
    CreateTime: 2012-11-23 11:51:00
    EntityID: A4
    ID: 154
    Name: Incoming
  A5:
    ActivityDialogs: []
    ChangeTime: 2012-11-23 11:51:33
    Config: {}
    CreateTime: 2012-11-23 11:51:33
    EntityID: A5
    ID: 155
    Name: Process complete
ActivityDialogs:
  AD1:
    ChangeTime: 2012-12-06 02:16:21
    Config:
      DescriptionLong: ''
      DescriptionShort: Recoding the demand
      FieldOrder:
        - DynamicField_Author
        - DynamicField_ISBN
        - DynamicField_Title
        - DynamicField_Status
      Fields:
        DynamicField_Author:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
        DynamicField_ISBN:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
        DynamicField_Status:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
        DynamicField_Title:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
      Interface:
        - AgentInterface
      Permission: ''
      RequiredLock: 0
      SubmitAdviceText: ''
      SubmitButtonText: ''
    CreateTime: 2012-11-23 14:34:43
    EntityID: AD1
    ID: 154
    Name: Recording the demand
  AD2:
    ChangeTime: 2012-11-23 14:57:41
    Config:
      DescriptionLong: ''
      DescriptionShort: Approval denied
      FieldOrder:
        - Article
        - DynamicField_Status
      Fields:
        Article:
          Config:
            ArticleType: note-internal
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
        DynamicField_Status:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
      Interface:
        - AgentInterface
      Permission: ''
      RequiredLock: 0
      SubmitAdviceText: ''
      SubmitButtonText: Deny Request
    CreateTime: 2012-11-23 14:36:39
    EntityID: AD2
    ID: 155
    Name: Approval denied
  AD3:
    ChangeTime: 2012-12-14 03:14:23
    Config:
      DescriptionLong: ''
      DescriptionShort: Approved
      FieldOrder:
        - DynamicField_Status
      Fields:
        DynamicField_Status:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
      Interface:
        - AgentInterface
      Permission: ''
      RequiredLock: 0
      SubmitAdviceText: ''
      SubmitButtonText: Approve Request
    CreateTime: 2012-11-23 14:37:35
    EntityID: AD3
    ID: 156
    Name: Approved
  AD4:
    ChangeTime: 2012-11-23 14:58:52
    Config:
      DescriptionLong: ''
      DescriptionShort: Order rejected
      FieldOrder:
        - Article
        - DynamicField_Status
      Fields:
        Article:
          Config:
            ArticleType: note-internal
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
        DynamicField_Status:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
      Interface:
        - AgentInterface
      Permission: ''
      RequiredLock: 0
      SubmitAdviceText: ''
      SubmitButtonText: Reject Order
    CreateTime: 2012-11-23 14:38:48
    EntityID: AD4
    ID: 157
    Name: Order rejected
  AD5:
    ChangeTime: 2012-12-06 02:20:12
    Config:
      DescriptionLong: ''
      DescriptionShort: Order placed
      FieldOrder:
        - DynamicField_DeliveryDate
        - DynamicField_Price
        - DynamicField_Supplier
        - DynamicField_Status
      Fields:
        DynamicField_DeliveryDate:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
        DynamicField_Price:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
        DynamicField_Status:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
        DynamicField_Supplier:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
      Interface:
        - AgentInterface
      Permission: ''
      RequiredLock: 0
      SubmitAdviceText: ''
      SubmitButtonText: Place Order
    CreateTime: 2012-11-23 14:41:28
    EntityID: AD5
    ID: 158
    Name: Order placed
  AD6:
    ChangeTime: 2012-11-23 14:42:43
    Config:
      DescriptionLong: ''
      DescriptionShort: Shipment received
      FieldOrder:
        - DynamicField_DateOfReceipt
        - DynamicField_Status
      Fields:
        DynamicField_DateOfReceipt:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
        DynamicField_Status:
          DefaultValue: ''
          DescriptionLong: ''
          DescriptionShort: ''
          Display: 1
      Interface:
        - AgentInterface
      Permission: ''
      RequiredLock: 0
      SubmitAdviceText: ''
      SubmitButtonText: ''
    CreateTime: 2012-11-23 14:42:43
    EntityID: AD6
    ID: 159
    Name: Shipment received
Process:
  Activities:
    - A1
    - A2
    - A3
    - A4
    - A5
  ChangeTime: 2012-12-06 02:31:59
  Config:
    Description: The process to order a book
    Path:
      A1:
        T1:
          ActivityEntityID: A2
          TransitionAction:
            - TA2
            - TA1
      A2:
        T2:
          ActivityEntityID: A5
          TransitionAction:
            - TA3
            - TA4
            - TA8
        T3:
          ActivityEntityID: A3
          TransitionAction:
            - TA5
      A3:
        T4:
          ActivityEntityID: A5
          TransitionAction:
            - TA3
            - TA4
            - TA8
        T5:
          ActivityEntityID: A4
          TransitionAction:
            - TA6
      A4:
        T6:
          ActivityEntityID: A5
          TransitionAction:
            - TA3
            - TA4
            - TA7
      A5: {}
    StartActivity: A1
    StartActivityDialog: AD1
  CreateTime: 2012-11-23 11:45:12
  EntityID: P1
  ID: 94
  Layout:
    A1:
      left: 172
      top: 63
    A2:
      left: 402
      top: 156
    A3:
      left: 649
      top: 255
    A4:
      left: 774
      top: 391
    A5:
      left: 194
      top: 410
  Name: Book ordering
  State: Active
  StateEntityID: S1
  TransitionActions:
    - TA1
    - TA2
    - TA3
    - TA4
    - TA8
    - TA5
    - TA3
    - TA4
    - TA8
    - TA6
    - TA3
    - TA4
    - TA7
  Transitions:
    - T1
    - T2
    - T3
    - T4
    - T5
    - T6
TransitionActions:
  TA1:
    ChangeTime: 2012-11-23 16:01:37
    Config:
      Config:
        Queue: Superior
      Module: Kernel::System::ProcessManagement::TransitionAction::TicketQueueSet
    CreateTime: 2012-11-23 15:50:59
    EntityID: TA1
    ID: 61
    Name: Move the process ticket into the "Superior" queue
  TA2:
    ChangeTime: 2012-11-23 16:02:12
    Config:
      Config:
        Responsible: Superior
      Module: Kernel::System::ProcessManagement::TransitionAction::TicketResponsibleSet
    CreateTime: 2012-11-23 15:58:22
    EntityID: TA2
    ID: 62
    Name: Change ticket responsible to "Superior"
  TA3:
    ChangeTime: 2012-11-24 14:27:02
    Config:
      Config:
        Queue: Employee
      Module: Kernel::System::ProcessManagement::TransitionAction::TicketQueueSet
    CreateTime: 2012-11-23 16:02:54
    EntityID: TA3
    ID: 63
    Name: Move the process ticket into the "Employee" queue
  TA4:
    ChangeTime: 2012-11-23 16:04:06
    Config:
      Config:
        Responsible: Employee
      Module: Kernel::System::ProcessManagement::TransitionAction::TicketResponsibleSet
    CreateTime: 2012-11-23 16:04:06
    EntityID: TA4
    ID: 64
    Name: Change ticket responsible to "Employee"
  TA5:
    ChangeTime: 2012-12-06 02:18:34
    Config:
      Config:
        Queue: Purchasing
      Module: Kernel::System::ProcessManagement::TransitionAction::TicketQueueSet
    CreateTime: 2012-11-23 16:04:54
    EntityID: TA5
    ID: 65
    Name: Move process ticket into the "Purchasing" queue
  TA6:
    ChangeTime: 2012-12-06 02:18:48
    Config:
      Config:
        Queue: Post office
      Module: Kernel::System::ProcessManagement::TransitionAction::TicketQueueSet
    CreateTime: 2012-11-23 16:06:20
    EntityID: TA6
    ID: 66
    Name: Move process ticket into the "Post office" queue
  TA7:
    ChangeTime: 2012-12-06 02:29:55
    Config:
      Config:
        State: closed successful
      Module: Kernel::System::ProcessManagement::TransitionAction::TicketStateSet
    CreateTime: 2012-12-06 02:29:27
    EntityID: TA7
    ID: 67
    Name: Close ticket successfully
  TA8:
    ChangeTime: 2012-12-06 02:31:12
    Config:
      Config:
        State: closed unsuccessful
      Module: Kernel::System::ProcessManagement::TransitionAction::TicketStateSet
    CreateTime: 2012-12-06 02:31:12
    EntityID: TA8
    ID: 68
    Name: Close ticket unsuccessfully
Transitions:
  T1:
    ChangeTime: 2012-11-23 15:12:20
    Config:
      Condition:
        1:
          Fields:
            DynamicField_Status:
              Match: Approval
              Type: String
          Type: and
      ConditionLinking: and
    CreateTime: 2012-11-23 11:53:52
    EntityID: T1
    ID: 94
    Name: Approval
  T2:
    ChangeTime: 2012-11-23 15:12:50
    Config:
      Condition:
        1:
          Fields:
            DynamicField_Status:
              Match: Approval denied
              Type: String
          Type: and
      ConditionLinking: and
    CreateTime: 2012-11-23 11:54:26
    EntityID: T2
    ID: 95
    Name: Approval denied
  T3:
    ChangeTime: 2012-11-23 15:13:29
    Config:
      Condition:
        1:
          Fields:
            DynamicField_Status:
              Match: Approved
              Type: String
          Type: and
      ConditionLinking: and
    CreateTime: 2012-11-23 11:54:54
    EntityID: T3
    ID: 96
    Name: Approved
  T4:
    ChangeTime: 2012-11-23 15:14:08
    Config:
      Condition:
        1:
          Fields:
            DynamicField_Status:
              Match: Order denied
              Type: String
          Type: and
      ConditionLinking: and
    CreateTime: 2012-11-23 11:55:25
    EntityID: T4
    ID: 97
    Name: Order denied
  T5:
    ChangeTime: 2012-11-23 18:30:33
    Config:
      Condition:
        1:
          Fields:
            DynamicField_Status:
              Match: Order placed
              Type: String
          Type: and
      ConditionLinking: and
    CreateTime: 2012-11-23 11:56:15
    EntityID: T5
    ID: 98
    Name: Order placed
  T6:
    ChangeTime: 2012-11-23 15:15:30
    Config:
      Condition:
        1:
          Fields:
            DynamicField_Status:
              Match: Shipment received
              Type: String
          Type: and
      ConditionLinking: and
    CreateTime: 2012-11-23 11:56:48
    EntityID: T6
    ID: 99
    Name: Shipment received

                ]]></screen>
            </para>
        </section>
    </section>

    <section>
        <title>Process configuration reference</title>

        <section>
            <title>Process</title>
            <para>
                A Process models the path of a workflow/process. The waypoints on this path can be
                Activities or Tranistions, we'll talk about these later.
            </para>
            <section>
                <title>Process configuration</title>
                <para>
                    The Process configuration can be done in the file
                    <filename>Kernel/Config.pm</filename> but it is strongly recommended to create
                    new files like <filename>Kernel/Config/Files/MyProcess.pm</filename>. notice
                    that the GUI generates the file
                    <filename>Kernel/Config/File/ZZZProcessManagement</filename> please avoid to use
                    that filename, otherwise it will be overwritten when you sync processes.
                    Let's see an example process configuration (from process cache file):
                </para>
                <para>
                    <screen>
$Self->{'Process'} = {
    'P1' => {
        Name                => 'Book order',
        CreateTime          => '16-02-2012 13:37:00',
        CreateBy            => '1',
        ChangeTime          => '17-02-2012 13:37:00',
        ChangeBy            => '1',
        State               => 'Active',
        StartActivity       => 'A1',
        StartActivityDialog => 'AD1',
        Path => {
            'A1' => {
                'T1' => {
                    ActivityEntityID => 'A2',
                },
            },
            'A2' => {
                'T2' =>  {
                    ActivityEntityID => 'A3',
                },
            },
        },
    },
    'P2' => {
        Name                => 'IT order',
        CreateTime          => '26-02-2012 13:37:00',
        CreateBy            => '1',
        ChangeTime          => '27-02-2012 13:37:00',
        ChangeBy            => '1',
        State               => 'Active',
        StartActivity       => 'A2',
        StartActivityDialog => 'AD2',
        Path => {
            'A2' => {
                'T3' => {
                    ActivityEntityID => 'A4',
                },
            },
        },
    }
};
                    </screen>
                </para>
            </section>
            <section>
                <title>Name</title>
                <para>
                    The name of the process, this can be selected by the agent when creating a new
                    process ticket.
                </para>
            </section>
            <section>
                <title>CreateTime</title>
                <para>
                    The time when the process was created.
                </para>
            </section>
            <section>
                <title>CreateBy</title>
                <para>
                    The UID of the user creating the process.
                </para>
            </section>
            <section>
                <title>ChangeTime</title>
                <para>
                    The time when the process was changed.
                </para>
            </section>
            <section>
                <title>ChangeBy</title>
                <para>
                    The UID of the user who made the last change to the process.
                </para>
            </section>
            <section>
                <title>State</title>
                <para>
                    Defines the state of a process. Possible values:
                    <itemizedlist>
                        <listitem>
                            <para>
                                'Active' are all processes which can be used in new process tickets.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                'FadeAway' are processes which cannot be selected any more for new
                                tickets, but existing tickets still can use the process.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                'Inactive' processes are deactivated and cannot be used for new or
                                existing tickets.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
            </section>
            <section>
                <title>StartActivity</title>
                <para>
                    When creating a new process ticket, a StartActivity must be defined. As soon as
                    the ticket is created, this Activity will be set and used as the base for the
                    first transition checks.
                </para>
            </section>
            <section>
                <title>StartActivityDialog</title>
                <para>
                    For new process tickets, a StartActivityDialog must be defined. This will be
                    shown when creating a new process ticket (after the process was selected). At
                    this point, the ticket does not exist yet, it will be created after submitting
                    the StartActivityDialog.
                </para>
            </section>
            <section>
                <title>Path</title>
                <para>
                    The Path contains the structure of the Activities, and the possible Transitions
                    between them, for the current process. And also the Transition Actions that
                    happens when transitioning . This controls the way that a process ticket can
                    take. Example:
                </para>
                <para>
                    <screen>
'A1' => {
    'T1' => {
        ActivityEntityID => 'A2',
    },
    'T2' => {
        ActivityEntityID => 'A3',
    },
    'T3' => {
        ActivityEntityID => 'A4',
        TransitionAction => ['TA1', 'TA2'],
    },
},
                    </screen>
                </para>
                <para>
                    If a process ticket is in Activity 'A1', it has three possible ways to get to
                    another Activity. In the Transitions 'T1' to 'T3', conditions are defined, that
                    a process ticket must fulfill to move (transit) to another Activity.
                </para>
                <para>
                    If in this case all the values of the process ticket and its dynamic fields that
                    are needed for the Transition 'T2' are correct, the ticket will be moved from
                    Activity 'A1' to 'A3'. After an ActivityDialog is submitted, or any other change
                    is made to a ticket, it will be checked for possible Transitions from the
                    current Activity. If multiple Transitions are possible, the first one will be
                    used (based on nummerical sorting of the TransitionIDs).
                </para>
                <para>
                    Additionally, it is possible to assign Transition Actions to Transitions in the
                    Path configuration. These are modules which are executed after a successful
                    Transition. They have to be specified in array form as in the example, we'll
                    talk about the details later.
                </para>
            </section>
        </section>

        <section>
            <title>Activity</title>
            <para>
                An Activity contains one or more Activity Dialogs and models a 'step' in the
                process. All Activity Dialogs of the current Activity are displayed in the ticket
                zoom and can be used until the conditions of a Transition are fulfilled.
            </para>
            <section>
            <title>Activity configuration</title>
            <para>
                Let's see an example activity configuration:
            </para>
            <para>
                <screen>
$Self->{'Process::Activity'} =
{
    'A1' => {
        Name       => 'Activity 1 optional',
        CreateTime => '16-02-2012 13:37:00',
        CreateBy   => '1',
        ChangeTime => '17-02-2012 13:37:00',
        ChangeBy   => '1',
        ActivityDialog => {
            1 => 'AD1',
        },
    },
    'A2' => {
        Name       => 'Activity 2 optional',
        CreateTime => '16-02-2012 13:37:00',
        CreateBy   => '1',
        ChangeTime => '17-02-2012 13:37:00',
        ChangeBy   => '1',
        ActivityDialog => {
            1 => 'AD5',
            2 => 'AD6',
            3 => 'AD1',
        },
    },
};
                </screen>
            </para>
            </section>
            <section>
                <title>Name</title>
                <para>
                    The name of the activity.
                </para>
            </section>
            <section>
                <title>CreateTime</title>
                <para>
                    The time when it was created.
                </para>
            </section>
            <section>
                <title>CreateBy</title>
                <para>
                    UID of the user who created the Activity.
                </para>
            </section>
            <section>
                <title>ChangeTime</title>
                <para>
                    The last time when it was changed.
                </para>
            </section>
            <section>
                <title>ChangeBy</title>
                <para>
                    UID of the last user who changed the Activity.
                </para>
            </section>
            <section>
                <title>ActivityDialog</title>
                <para>
                    Activity Dialog contains the list of Activity Dialogs which are available in
                    this Activity. All Activity Dialogs of the current Activity are displayed in
                    the ticket zoom. Their order is set by the order in the configuration, here
                    'AD5' is shown before 'AD6' and 'AD1'.
                </para>
            </section>
        </section>

        <section>
            <title>ActivityDialog</title>
            <para>
                An Activity Dialog is a particular screen and can be used in different Activities.
            </para>
            <section>
                <title>ActivityDialog configuration</title>
                <para>
                    Let's see an example config
                </para>
                <para>
                    <screen>
$Self->{'Process::ActivityDialog'} = {
    'AD1' => {
        Name             => 'ActivityDialog 1 optional',
        DescriptionShort => 'Basic info',
        DescriptionLong  => 'Please insert the necessesary basic information for IT orders',
        CreateTime       => '28-02-2012 13:37:00',
        CreateBy         => '1',
        ChangeTime       => '29-02-2012 13:37:00',
        ChangeBy         => '1',
        Fields => {
            PriorityID => {
                DescriptionShort => 'Priority ID',
                DescriptionLong  => 'Enter the priority here',
                Display          => 2,
            },
        },
        FieldOrder       => [ 'PriorityID' ],
        SubmitAdviceText => 'Note: If you submit the form...',
        SubmitButtonText => 'Send request',
    },
    'AD2' => {
        Name => 'ActivityDialog 2 optional',
        DescriptionShort => 'Basic info',
        DescriptionLong  => 'Please insert the necessesary basic information for Book orders',
        CreateTime       => '28-02-2012 13:37:00',
        CreateBy         => '1',
        ChangeTime       => '29-02-2012 13:37:00',
        ChangeBy         => '1',
        Fields => {
            StateID => {
                DescriptionShort => 'State ID',
                DescriptionLong  => 'Enter the state here',
                Display          => 2,
                DefaultValue     => '2',
            },
            Queue => {
                DescriptionShort => 'Queue ID',
                DescriptionLong  => 'Enter the queue here',
                Display          => 2,
                DefaultValue     => 'Raw',
            },
            Title => {
                DescriptionShort => 'Title',
                DescriptionLong  => 'Enter the title here',
                Display          => 1,
                DefaultValue     => 'Default Title',
            },
            DynamicField_Anzahl => {
                DescriptionShort    => 'Amount',
                DescriptionLong     => 'Enter the amount here',
                Display             => 2,
                DefaultValue        => '4',
            },
        },
        FieldOrder       => [ 'DynamicField_Anzahl', 'StateID', 'Queue', 'Title' ],
        SubmitAdviceText => 'Note: If you submit the form...',
        SubmitButtonText => 'Send request',
    },
};
                    </screen>
                </para>
            </section>
            <section>
                <title>Name</title>
                <para>
                    Name of the Activity Dialog.
                </para>
            </section>
            <section>
                <title>CreateTime</title>
                <para>
                    Time when it was created.
                </para>
            </section>
            <section>
                <title>CreateBy</title>
                <para>
                    UID of the user who created this Activity Dialog.
                </para>
            </section>
            <section>
                <title>ChangeTime</title>
                <para>
                    Last time when it was changed.
                </para>
            </section>
            <section>
                <title>ChangeBy</title>
                <para>
                    UID of the last user who changed this Activity Dialog.
                </para>
            </section>
            <section>
                <title>Fields</title>
                <para>
                    Contains all fields which can be displayed in this Activity Dialog.
                    The following fields can currently be used:
                </para>
                <para>
                    <screen>
    Title
    State
    StateID
    Priority
    PriorityID
    Lock
    LockID
    Queue
    QueueID
    Customer
    CustomerID
    CustomerNo
    CustomerUserID
    Owner
    OwnerID
    Type
    TypeID
    SLA
    SLAID
    Service
    ServiceID
    Responsible
    ResponsibleID
    PendingTime
    DynamicField_$FieldName  # for all dynamic fields
                    </screen>
                </para>
                <para>
                    Example of a single field configuration:
                </para>
                <para>
                    <screen>
StateID => {
    DescriptionShort => 'State ID',
    DescriptionLong  => 'Enter the state here',
    Display          => 2,
    DefaultValue     => '2',
},
                    </screen>
                </para>
                <para>
                    The field "Article" is a special case. If it is present in a "Fields"
                    configuration, the Activity Dialog will contain a complete Richtext editor with
                    subject field and attachment handling. The entered text will then be added to
                    the ticket as an article and sent by email. Let's see an example Article field
                    configuration:
                    <screen>
Article => {
    DescriptionShort => 'Please insert your comment here.',
    DescriptionLong => '',
    Display         => 1,
    Config          => {
        ArticleType  => 'note-internal',
        LabelSubject => '',
        LabelBody    => '',
    },
},
                    </screen>
                </para>
                <para>
                    Let's look at the field configuration options:
                </para>
                <section>
                    <title>DescriptionShort</title>
                    <para>
                        Optional short description that is shown with the field title.
                    </para>
                </section>
                <section>
                    <title>DescriptionLong</title>
                    <para>
                        Optional longer field description that is shown then the mouse is over the
                        field, for example advice on how to fill out the field.
                    </para>
                </section>
                <section>
                    <title>Display</title>
                    <para>
                        Controls if the field is shown and/or mandatory.
                        Possible values:
                        <itemizedlist>
                            <listitem>
                                <para>
                                    '0': field is invisible. This can be helpful if field values
                                    should automatically be set. The configured DefaultValue will be
                                    stored in this case.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    '1': field is visible, but optional.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    '2': field is visible and mandatory. The following fields can
                                    only be invisible or mandatory:
                                    <screen>
    QueueID
    Queue
    State
    StateID
    Lock
    LockID
    Priority
    PriorityID
    Type
    TypeID
                                </screen>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                    <para>
                        If fields are configured as optional, and no value is submitted by the user,
                        the Default Value will be saved when the Activity Dialog is submitted by the
                        user.
                    </para>
                </section>
                <section>
                    <title>DefaultValue</title>
                    <para>
                        For fields with 'ID' (like QueueID, OwnerID), this refers to the database ID
                        of the value. For other fields without 'ID' (like Queue, Owner), the
                        DefaultValue must contain the value itself. Example:
                    </para>
                    <para>
                        <screen>
Queue => {
    DescriptionShort => 'Queue',
    DescriptionLong  => 'Enter the queue here',
    Display          => 2,
    DefaultValue     => 'Raw',
},
                        </screen>
                    </para>
                </section>
            </section>
            <section>
                <title>FieldOrder</title>
                <para>
                    Here the display order of the fields is configured. IMPORTANT: Invisible fields
                    also must be configured here, because only configured fields will be considered
                    when saving. Fields which are not configured will not be saved.
                </para>
            </section>
            <section>
                <title>SubmitAdviceText</title>
                <para>
                    Optional text to be shown right above the submit button for additional help or
                    advice text.
                </para>
            </section>
            <section>
                <title>SubmitButtonText</title>
                <para>
                    Optional custom text for the submit button.
                </para>
            </section>
        </section>

        <section>
            <title>Transition</title>
            <para>
                A Transition decides - based on configurable conditions - which path in the Process
                is taken, i. e. to which Activity a Process ticket can be moved.
            </para>
            <section>
                <title>Transition configuration</title>
                <para>
                    Let's see an example:
                </para>
                <para>
                    <screen>
$Self->{'Process::Transition'} = {
    'T1' => {
        Name => 'Transition 1',
        CreateTime => '14-03-2012 13:37:00', # optional
        CreateBy   => '1',                   # optional
        ChangeTime => '15-03-2012 13:37:00', # optional
        ChangeBy   => '15-03-2012 13:37:00', # optional
        Condition  => {
            Cond1  => {
                Fields => {
                    StateID => {
                        Type  => 'String',
                        Match => '1',
                    },
                },
            },
        },
    },
    'T2' => {
        Name       => 'Transition 2 optional',
        CreateTime => 'DATE',   # optional
        CreateBy   => 'USERID', # optional
        ChangeTime => 'DATE',   # optional
        ChangeBy => 'USERID',   # optional
        Condition => {
            Cond1 => {
                Queue               => 'Raw',
                DynamicField_Farbe  => '2',
                DynamicField_Anzahl => '1',
            },
        },
    },
};
                    </screen>
                </para>
            </section>
            <section>
                <title>Name</title>
                <para>
                    Name of the transition.
                </para>
            </section>
            <section>
                <title>CreateTime</title>
                <para>
                    Time when it was created.
                </para>
            </section>
            <section>
                <title>CreateBy</title>
                <para>
                    UID of the user who created this Transition.
                </para>
            </section>
            <section>
                <title>ChangeTime</title>
                <para>
                    Last time when it was changed.
                </para>
            </section>
            <section>
                <title>ChangeBy</title>
                <para>
                    UID of the last user who changed this Transition.
                </para>
            </section>
            <section>
                <title>Condition</title>
                <para>
                    Contains all conditions that are neccessary for this Transition to take effect.
                    Example:
                </para>
                <para>
                    <screen>
Condition => {
    Type  => 'and',
    Cond1 => {
        Type   => 'and',
        Fields => {
            StateID => {
                Type  => 'String',
                Match => '1',
            },
            DynamicField_Marke => {
                Type  => 'String',
                Match => 'VW',
        },
    },
    Cond2 => {
        Type => 'and',
        Fields => {
            Queue => {
                Type  => 'String',
                Match => 'Raw',
            },
        },
    },
},
                    </screen>
                </para>
                <para>
                    Let's look at the condition configuration in detail.
                </para>
                <section>
                    <title>Type (Condition)</title>
                    <para>
                        Specifies the way the different condition elements are connected to each
                        other. Possible values:
                        <itemizedlist>
                            <listitem>
                                <para>
                                    'and': This is the default. All conditions must be met for the
                                    transition to take effect.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    'or': At least one condition must match.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    'xor': Exactly one condition must match, not more.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </section>
                <section>
                    <title>Cond1</title>
                    <para>
                        This is the name of an example condition. It can be freely chosen.
                        Conditions are evaluated in sorted order.
                    </para>
                </section>
                <section>
                    <title>Type (Cond)</title>
                    <para>
                        Specifies the way how the individual field tests of this condition are
                        connected to each other. Possible values:
                        <itemizedlist>
                            <listitem>
                                <para>
                                    'and': This is the default. All field tests must match for this
                                    condition to match.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    'or': At least one field test must match.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    'xor': Exactly one field test must match, not more.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </section>
                <section>
                    <title>Fields</title>
                    <para>
                        Specifies the particular fields whose values should be tested. From our
                        example:
                        <screen>
Fields => {
    StateID => {
        Type  => 'String',
        Match => '1',
    },
                        </screen>
                    </para>
                </section>
                <section>
                    <title>StateID</title>
                    <para>
                        Example of a field name. The following ticket fields can be used:
                        <screen>
    Title
    State
    StateID
    Priority
    PriorityID
    Lock
    LockID
    Queue
    QueueID
    Customer
    CustomerID
    CustomerNo
    CustomerUserID
    Owner
    OwnerID
    Type
    TypeID
    SLA
    SLAID
    Service
    ServiceID
    Responsible
    ResponsibleID
    PendingTime
    DynamicField_$FieldName # for all DynamicFields
                        </screen>
                    </para>
                    <para>
                        When testing a field with 'ID' (like SLAID), the database ID of the field
                        will be used for testing, for other fields (like SLA) the actual value is
                        used for testing.
                    </para>
                </section>
                <section>
                    <title>Type</title>
                    <para>
                        Determines the kind of field testing. Possible values:

                        <itemizedlist>
                            <listitem>
                                <para>
                                    'String': Compares the field value with the string specified in
                                    'Match'. Matches if they are exactly the same.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    'Hash': Compares the field value (hash) with the hash specified
                                    in 'Match'. All hash values must be the same.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    'Array': Compares the field value (array) with the array
                                    specified in 'Match'. Both lists must be the same.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    'Regex': The field value can be tested with a regular
                                    expression. It is important that 'Match' contains
                                    <emphasis>qr{}xms</emphasis> as a base condition. Between the
                                    braces the actual regular expression can be noted.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    'Module': Allows you to use a perl module for condition
                                    checking. If it returns 1, the check was positive. You can find
                                    an example module in
                                    <filename>Kernel/System/ProcessManagement/TransitionValidation/ValidateDemo.pm</filename>.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </section>
            </section>
        </section>

        <section>
            <title>Transition Actions</title>
            <para>
                Transition Actinons are actions which can be triggered after successfully applied
                transitions (when a process ticket moves from one activity to another). These
                Transition Actions can be used to perform different changes on the ticket, e. g.
                change the Queue or the Owner of the ticket, and you can also create your own
                Transition Actions to perform other complex changes.
            </para>
            <section>
                <title>Transition Action configuration</title>
                <para>
                    Let's see an example:
                    <screen>
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Queue Move',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketQueueSet',
        Config => {
            Queue => 'Junk',
        },

    },
};
                    </screen>
                </para>
            </section>
            <section>
                <title>Name</title>
                <para>
                    The name of the Transition Action.
                </para>
            </section>
            <section>
                <title>Module</title>
                <para>
                    Specifies the Perl module to be used.
                </para>
            </section>
            <section>
                <title>Config</title>
                <para>
                    This parameter contains all settings which are required for the module. Its
                    content depends on the particular Transition Action module which is used. Please
                    see the documentation of the individual modules for details. In our example,
                    only the Queue must be specified.
                </para>
            </section>
            <section>
                <title>Reusing Transition Action modules</title>
                <para>
                    To use Transition Action modules multiple times, just specify several
                    TransitionActions in your configuration. Example:
                    <screen>
    $Self->{'Process::TransitionAction'} = {
        'TA1' => {
            Name   => 'Queue Move Junk',
            Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketQueueSet',
            Config => {
                Queue => 'Junk',
            },
        },
        'TA2' => {
            Name   => 'Queue Move Raw',
            Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketQueueSet',
            Config => {
                Queue => 'Raw',
            },
        },
    };
                    </screen>
                </para>
                <para>
                    Here the same module is used to move a process ticket into the 'Raw' queue, and
                    another time to move it into the junk queue. The Transition Action which must
                    be used for a particular Transition is determined from the 'Path' setting of the
                    Process configuration.
                </para>
            </section>
            <section id="available-transition-actions">
                <title>Available Transition Actions</title>
                <para>
                    OTRS comes with several Transition Actions that can be used in your processes.
                    Here you can find their documentation and how they need to be configured.
                </para>

                <section>
                    <title>DynamicFieldSet</title>
                    <para>
                        Sets one or more dynamic fields at a process ticket. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Set DynamicField Master to Master and Approved to 1',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::DynamicFieldSet',
        Config => {
            MasterSlave => 'Master',
            Approved    => '1',

        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'MasterSlave' and 'Approved' are given as examples of DynamicField names.
                        The values of the fields ('Master' and '1') will be set by this
                        TransitionAction.
                    </para>
                </section>

                <section>
                    <title>TicketArticleCreate</title>
                    <para>
                        Creates an article and can be used to create notes or email replies. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Article Create Note Internal',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketArticleCreate',
        Config => {
            ArticleType      => 'note-internal',                                        # note-external|phone|fax|sms|...
                                                                                        #   excluding any email type
            SenderType       => 'agent',                                                # agent|system|customer
            ContentType      => 'text/plain; charset=ISO-8859-15',                      # or optional Charset & MimeType
            Subject          => 'some short description',                               # required
            Body             => 'the message text',                                     # required
            HistoryType      => 'OwnerUpdate',                                          # EmailCustomer|Move|AddNote|PriorityUpdate|WebRequestCustomer|...
            HistoryComment   => 'Some free text!',
            From             => 'Some Agent <email@example.com>',                       # not required but useful
            To               => 'Some Customer A <customer-a@example.com>',             # not required but useful
            Cc               => 'Some Customer B <customer-b@example.com>',             # not required but useful
            ReplyTo          => 'Some Customer B <customer-b@example.com>',             # not required
            InReplyTo        => '<asdasdasd.12@example.com>',                           # not required but useful
            References       => '<asdasdasd.1@example.com> <asdasdasd.12@example.com>', # not required but useful
            NoAgentNotify    => 0,                                                      # if you don't want to send agent notifications
            AutoResponseType => 'auto reply',                                           # auto reject|auto follow up|auto reply/new ticket|auto remove

            ForceNotificationToUserID   => [ 1, 43, 56 ],                               # if you want to force somebody
            ExcludeNotificationToUserID => [ 43, 56 ],
                 # if you want full exclude somebody from notfications,
                 # will also be removed in To: line of article,
                 # higher prio as ForceNotificationToUserID
            ExcludeMuteNotificationToUserID => [ 43, 56 ],
                 # the same as ExcludeNotificationToUserID but only the
                 # sending gets muted, agent will still shown in To:
                 # line of article
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction. It can be
                        freely chosen, but should reflect the purpose of the configured action.
                    </para>
                    <para>
                        'ArticleType' defines the type of the article to be created. Possible
                        values: phone, fax, sms, webrequest, note-internal, note-external and
                        note-report.
                    </para>
                    <para>
                        SenderType defines the sender type of the article. Possible values: agent,
                        system, customer.
                    </para>
                    <para>
                        'ContentType' defines the content type of the article. Possible values:
                        'text/plain; charset=ISO-8859-15' or any other valid charset and mime type.
                    </para>
                    <para>
                        'Subject' defines the article title. Mandatory.
                    </para>
                    <para>
                        'Body' defines the article content. Mandatory.
                    </para>
                    <para>
                        HistoryType defines the type of the history entry. Possible values:
                        AddNote, ArchiveFlagUpdate, Bounce, CustomerUpdate, EmailAgent,
                        EmailCustomer, EscalationResponseTimeNotifyBefore,
                        EscalationResponseTimeStart, EscalationResponseTimeStop,
                        EscalationSolutionTimeNotifyBefore, EscalationSolutionTimeStart,
                        EscalationSolutionTimeStop, EscalationUpdateTimeNotifyBefore,
                        EscalationUpdateTimeStart, EscalationUpdateTimeStop, FollowUp, Forward,
                        Lock, LoopProtection, Merged, Misc, Move, NewTicket, OwnerUpdate,
                        PhoneCallAgent, PhoneCallCustomer, PriorityUpdate, Remove, ResponsibleUpdate,
                        SendAgentNotification, SendAnswer, SendAutoFollowUp, SendAutoReject,
                        SendAutoReply, SendCustomerNotification, ServiceUpdate, SetPendingTime,
                        SLAUpdate, StateUpdate, Subscribe, SystemRequest, TicketDynamicFieldUpdate,
                        TicketLinkAdd, TicketLinkDelete, TimeAccounting, TypeUpdate, Unlock,
                        Unsubscribe, WebRequestCustomer.
                    </para>
                    <para>
                        'HistoryComment' defines the content of the history entry.
                    </para>
                    <para>
                        'From', 'To', 'Cc' and 'ReplyTo' take email addresses in the notation
                        specified above.
                    </para>
                    <para>
                        'InReplyTo' and 'References' take email message IDs.
                    </para>
                    <para>
                        'NoAgentNotify' - if set to 1, the email notification of the Agent will not
                        be sent.
                    </para>
                    <para>
                        'AutoResponseType' can take the following values:
                        auto follow up, auto reject, auto remove, auto reply, auto reply/new ticket.
                    </para>
                    <para>
                        'ForceNotificationToUserID', 'ExcludeNotificationToUserID',
                        'ExcludeMuteNotificationToUserID' can take a list of UserIDs that are
                        either always notified, not notified or listed as notified but not actually
                        sent a notification email.
                    </para>
                </section>
                <section>
                    <title>TicketCustomerSet</title>
                    <para>
                        Sets the customer of a process ticket. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Customer Set Customer to test',
        Module => 'Kernel::System::Process::TransitionAction::TicketCustomerSet',
        Config => {
            No      => 'test',
            User    => 'client-user-123',
            # or in other words
            # CustomerID     => 'client123',
            # CustomerUserID => 'client-user-123',

        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        No or CustomerID set the Customer ID of the customer.
                    </para>
                    <para>
                        User or CustomerUserID set the Username of the customer.
                    </para>
                </section>

                <section>
                    <title>TicketLockSet</title>
                    <para>
                        Changes the lock of a process ticket. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Set Lock to lock',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketLockSet',
        Config => {
            Lock   => 'lock',
            # or
            LockID => 2,
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'Lock' defines the new lock of the process ticket.
                    </para>
                    <para>
                        'LockID' defines the internal ID of the new lock.
                    </para>
                </section>

                <section>
                    <title>TicketOwnerSet</title>
                    <para>
                        Changes the owner of a process ticket. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Owner Set root@localhost',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketOwnerSet',
        Config => {
            Owner => 'root@localhost',
            # or
            OwnerID => 1,
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'Owner' specifies the login name of the new owner.
                    </para>
                    <para>
                        'OwnerID' specifies the internal ID of the new owner.
                    </para>
                </section>

                <section>
                    <title>TicketQueueSet</title>
                    <para>
                        Moves the ticket into a target queue. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Queue Move Raw',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketQueueSet',
        Config => {
            Queue => 'Raw',
            # or
            # QueueID => '2',
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'Queue' specifies the name of the target queue.
                    </para>
                    <para>
                        'QueueID' specifies the internal ID of the target queue.
                    </para>
                </section>

                <section>
                    <title>TicketResponsibleSet</title>
                    <para>
                        Changes the responsible of a process ticket. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Responsible Set root@localhost',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketResponsibleSet',
        Config => {
            Responsible => 'root@localhost',
            # or
            ResponsibleID => 1,
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'Responsible' specifies the login name of the new responsible.
                    </para>
                    <para>
                        'ResponsibleID' specifies the internal ID of the new responsible.
                    </para>
                </section>

                <section>
                    <title>TicketServiceSet</title>
                    <para>
                        Assigns a service to a process ticket.
                        The ticket requires to have a customer and the service must be assigned to
                        that customer.
                        Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Set MyService service',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketServiceSet',
        Config => {
            Service   => 'MyService',
            # or
            ServiceID => 123,
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'Service' defines the new service of the process ticket. The full name is
                        required (e.g. GramdFatherService::FatherService::SonService ).
                    </para>
                    <para>
                        'ServiceID' defines the internal ID of the new service.
                    </para>
                </section>

                <section>
                    <title>TicketSLASet</title>
                    <para>
                        Assigns a service level agreement to a process ticket.
                        The ticket requires to have a service and the SLA must be assigned to
                        that service.
                        Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Set MySLA SLA',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketSLASet',
        Config => {
            SLA   => 'MyService',
            # or
            SLAID => 123,
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'SLA' defines the new service level agreement of the process ticket.
                    </para>
                    <para>
                        'SLAID' defines the internal ID of the new SLA.
                    </para>
                </section>

                <section>
                    <title>TicketStateSet</title>
                    <para>
                        Changes the state of a process ticket. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Set State to open',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketStateSet',
        Config => {
            State   => 'open',
            # or
            StateID => 4,
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'State' defines the new state of the process ticket.
                    </para>
                    <para>
                        'StateID' defines the internal ID of the new state.
                    </para>
                </section>

                <section>
                    <title>TicketTitleSet</title>
                    <para>
                        Sets the ticket title of a process ticket. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Set Ticket Title to Ticket-title',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketTitleSet',
        Config => {
            Title => 'Ticket-title',
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'Title' specifies the new title of the ticket.
                    </para>
                </section>

                <section>
                    <title>TicketTypeSet</title>
                    <para>
                        Sets the ticket type of a process ticket. Example:
                    </para>
                    <para>
                        <screen><![CDATA[
$Self->{'Process::TransitionAction'} = {
    'TA1' => {
        Name   => 'Set Ticket Type to default',
        Module => 'Kernel::System::ProcessManagement::TransitionAction::TicketTypeSet',
        Config => {
            Type     => 'default',
            # or
            # TypeID => '1',
        },
    },
};
                        ]]></screen>
                    </para>
                    <para>
                        'Name' specifies the name of the configured TransitionAction.
                    </para>
                    <para>
                        'Type' specifies the name of the ticket type.
                    </para>
                    <para>
                        'TypeID' specifies the internal ID of the ticket type.
                    </para>
                </section>
            </section>
        </section>

        <section id="process-management-acl">
            <title>Access Control Lists (ACLs)</title>
            <para>
                With the help of ACLs, you can limit selectable values in process tickets.
                Please also see the <link linkend="acl-reference">ACL reference</link> for
                a description of the full ticket ACL syntax.
            </para>
            <section>
                <title>ACL configuration</title>
                <para>
                    ACLs can only be defined in <filename>Kernel/Config.pm</filename>. Example:
                </para>
                <para>
                    <screen>
$Self->{TicketAcl}->{'001-ACL-ProcessProperties'} = {
    Properties => {
        Process => {
            ProcessEntityID        => ['P1'],
            ActivityEntityID       => ['A1'],
            ActivityDialogEntityID => ['AD1'],
        }
    },
    Possible => {
        ActivityDialog => ['AD1', 'AD3'],
    },
    PossibleNot => {
        ActivityDialog => ['AD3'],
    },
};
                    </screen>
                </para>
            </section>
            <section>
                <title>001-ACL-ProcessProperties</title>
                <para>
                    Name of the ACL rule. For further information on ACL rules in general, please
                    consult:
                    <ulink url="http://doc.otrs.org/3.2/en/html/customization.html#acl">
                        the manual
                    </ulink>.
                </para>
            </section>
            <section>
                <title>Process</title>
                <para>
                    This is the section that is used to check if an ACL must be applied. If it has
                    the specified values, the rule is applied. The following values can be used:
                </para>
                <section>
                    <title>ProcessEntityID</title>
                    <para>
                        The ID of a process that the process. Matches if the ticket is assigned to
                        this process.
                    </para>
                </section>
                <section>
                    <title>ActivityEntityID</title>
                    <para>
                        The ID of the Activity that the process ticket currently is assigned to.
                    </para>
                </section>
                <section>
                    <title>ActivityDialogEntityID</title>
                    <para>
                        The ID of the Activity Dialog that is currently open for a process ticket.
                    </para>
                </section>
            </section>
            <section>
                <title>Possible/PossibleNot Activity Dialog</title>
                <para>
                    Here you can specify a list of Activity Dialog IDs. This list will limit the
                    possible Activity Dialogs that are offered to the user in the ticket zoom mask.
                </para>
                <para>
                    'Possible' lists the Activity Dialogs that are allowed. The setting above will
                    only allow 'AD1' and 'AD3' of the list of configured Activity Dialogs.
                </para>
                <para>
                    'PossibleNot' lists the Activity Dialogs that are not allowed. In the example
                    above, the setting will remove 'AD3' from the list of configured Activity
                    Dialogs.
                </para>
                <para>
                    If both 'Possible' and 'PossibleNot' are specified, the list of configured
                    Activity Dialogs will first be filtered by 'Possible', leaving only 'AD1' and
                    'AD3' in our example. Then 'PossibleNot' will be applied and filter out 'AD3',
                    so that only 'AD1' remains and is shown as a possible Activity Dialog that the
                    user can use.
                </para>
                <para>
                    If multiple ACL rules match, the intersection of all matching rules will be
                    calculated to determine the possible Activity Dialogs. Example:
                </para>
                <para>
                    Configured Activity Dialogs: 'AD1', 'AD2', 'AD3', 'AD4', 'AD5', 'AD6', 'AD7'.
                    <screen>
$Self->{TicketAcl}->{'001-ACL-Status'} = {
    Properties => {
        Ticket => {
            Status => 'new',
        }
    },
    Possible => {
        ActivityDialog => ['AD1', 'AD2', 'AD3', 'AD6', 'AD7'],
    },
};
$Self->{TicketAcl}->{'002-ACL-Queue'} = {
    Properties => {
        Ticket => {
            Queue => ['Raw']
        }
    },
    Possible => {
        ActivityDialog => ['AD2', 'AD3', 'AD4', 'AD7'],
    },
};
$Self->{TicketAcl}->{'003-ACL-Priority'} = {
    Properties => {
        Ticket => {
            Priority => ['3 normal']
        }
    },
    PossibleNot => {
        ActivityDialog => ['AD3', 'AD4'],
    },
};
                    </screen>
                </para>
                <para>
                    If a process ticket has the state 'new', is in the 'Raw' queue and has a
                    priority '3 normal', then all three ACL rules will match.
                </para>
                <para>
                    The first rule reduces the Activity Dialogs from 'AD1', 'AD2', 'AD3', 'AD4',
                    'AD5', 'AD6', 'AD7' to 'AD1', 'AD2', 'AD3', 'AD6', 'AD7' and forbids 'AD4' and
                    'AD5'.
                </para>
                <para>
                    The second rule will now further reduce the remaining Activity Dialogs.
                    In our example, 'AD2', 'AD3', 'AD7' will remain.
                </para>
                <para>
                    Now the third rule will further reduce the list by 'PossibleNot'.
                    'AD3' is removed from the list. 'AD4' is not removed, since it was not on the
                    list in the first place. At the end, 'AD2' and 'AD7' remain as possible Activity
                    Dialogs that the user can utilize.
                </para>
            </section>
        </section>
    </section>
</section>
